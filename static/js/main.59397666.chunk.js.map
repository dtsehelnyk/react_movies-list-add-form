{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errors","inputChange","event","target","name","value","setState","inputValidation","type","test","formSubmit","preventDefault","mistakeCounter","Object","entries","forEach","prop","prevState","props","onAdd","this","titleError","imgUrlError","imdbUrlError","imdbIdError","onSubmit","classNames","placeholder","onChange","onBlur","React","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59397666.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends React.Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n\n    errors: {\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  inputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  inputValidation = (event) => {\n    const { errors } = this.state;\n    const { name, value, type } = event.target;\n    // eslint-disable-next-line\n    const regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (type === 'url') {\n      this.setState({\n        errors: {\n          ...errors,\n          [name]: regExp.test(value),\n        },\n      });\n\n      return;\n    }\n\n    this.setState({\n      errors: {\n        ...errors,\n        [name]: !!value,\n      },\n    });\n  }\n\n  formSubmit = (event) => {\n    event.preventDefault();\n\n    const { errors } = this.state;\n    let mistakeCounter = 0;\n\n    Object.entries(errors).forEach(([prop, value]) => {\n      if (value !== true) {\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            [prop]: false,\n          },\n        }));\n\n        mistakeCounter += 1;\n      }\n    });\n\n    if (mistakeCounter > 0) {\n      return;\n    }\n\n    this.props.onAdd({ ...this.state });\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      errors: {\n        title: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors: {\n        title: titleError,\n        imgUrl: imgUrlError,\n        imdbUrl: imdbUrlError,\n        imdbId: imdbIdError,\n      },\n    } = this.state;\n\n    return (\n      <form\n        className=\"NewMovie__form\"\n        onSubmit={this.formSubmit}\n      >\n        <input\n          className={classNames(\n            'NewMovie__input',\n            (titleError === true) && 'NewMovie__input--correct',\n            (titleError === false) && 'NewMovie__input--incorrect',\n          )}\n          name=\"title\"\n          placeholder=\"Movie title\"\n          type=\"text\"\n          value={title}\n          onChange={this.inputChange}\n          onBlur={this.inputValidation}\n        />\n\n        <input\n          className=\"NewMovie__input\"\n          name=\"description\"\n          placeholder=\"Description\"\n          type=\"text\"\n          value={description}\n          onChange={this.inputChange}\n          onBlur={this.inputValidation}\n        />\n\n        <input\n          className={classNames(\n            'NewMovie__input',\n            (imgUrlError === true) && 'NewMovie__input--correct',\n            (imgUrlError === false) && 'NewMovie__input--incorrect',\n          )}\n          name=\"imgUrl\"\n          placeholder=\"Image URL\"\n          type=\"url\"\n          value={imgUrl}\n          onChange={this.inputChange}\n          onBlur={this.inputValidation}\n        />\n\n        <input\n          className={classNames(\n            'NewMovie__input',\n            (imdbUrlError === true) && 'NewMovie__input--correct',\n            (imdbUrlError === false) && 'NewMovie__input--incorrect',\n          )}\n          name=\"imdbUrl\"\n          placeholder=\"IMDb URL\"\n          type=\"url\"\n          value={imdbUrl}\n          onChange={this.inputChange}\n          onBlur={this.inputValidation}\n        />\n\n        <input\n          className={classNames(\n            'NewMovie__input',\n            (imdbIdError === true) && 'NewMovie__input--correct',\n            (imdbIdError === false) && 'NewMovie__input--incorrect',\n          )}\n          name=\"imdbId\"\n          placeholder=\"IMDb ID\"\n          type=\"name\"\n          value={imdbId}\n          onChange={this.inputChange}\n          onBlur={this.inputValidation}\n        />\n\n        <button type=\"submit\">\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}